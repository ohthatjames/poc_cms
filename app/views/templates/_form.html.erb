<%= form_for(@template) do |f| %>
  <% if @template.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@template.errors.count, "error") %> prohibited this template from being saved:</h2>

      <ul>
      <% @template.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <h2>Available components</h2>
  <ul id="available-components">
    <% Components.all.each do |component| %>
      <li><span class="component-name"><%= component.humanized_name.to_s %></span> <%= link_to "Add", "#" %></li>
    <% end %>
  </ul>

  <h2>Selected components</h2>
  <ul id="selected-components">
  </ul>

  <div class="actions">
    <%= f.submit %>
  </div>
<% end %>

<%= javascript_tag do %>

  var COMPONENTS = <%=raw Components.all.inject({}) {|hash, component| hash[component.humanized_name.to_s] = component.options; hash }.to_json %>

  function addComponent(componentName, filledInOptions) {
    var str = '<li><span class="component-name">' + componentName + '</span> <a href="#" class="remove-component">x</a>'
    var options = COMPONENTS[componentName];
    if(options.length > 0) {
      str += '<p>'
      $.each(options, function(index, option) {
        str += option + ': '
        str += '<input type="text" name="' + option + '" '
        if(filledInOptions && filledInOptions[option]) {
          str += 'value="' + filledInOptions[option] + '" '
        }
        str += '/>'
      })
      str += '</p>'
    }
    str += '</li>'
    var el = $(str);
    $('#selected-components').append(el);
  }

  function removeComponent(component) {
    component.remove();
  }

  $(document).ready(function() {
    <% @template.components.each do |component| %>
      addComponent(<%=raw component.class.humanized_name.to_json %>, <%=raw component.options.to_json %>);
    <% end %>

    $('#available-components li a').click(function() {
      addComponent($(this).parent('li').find('.component-name').text())
    })

    $(document).on('click', '#selected-components li a.remove-component', function() {
      removeComponent($(this).parent('li'));
    });

    $('#selected-components').sortable();

    $('.edit_template').submit(function(event) {
      event.preventDefault();

      var components = [];
      $('#selected-components li').each(function(index, el) {
        var data = {};
        data["class"] = $(el).find('.component-name').text();
        data["options"] = {};
        $(el).find('input').each(function(index, el) {
          data["options"][$(el).attr("name")] = $(el).val()
        });
        components.push(data)
      });

      $.ajax($(this).attr("action"), {
        type: 'PUT',
        data: {
          template: {
            components: components
          }
        }
      })
      return false;
    })
  })
<% end %>